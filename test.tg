(println 1)
(defn fib [n] (if (= n 0) 0 (if (= n 1) 1 (+ (fib (- n 1)) (fib (- n 2))))))
(println (fib 6))
(defn ack [m n] (if (= m 0) (+ n 1) (if (= n 0) (ack (- m 1) 1) (ack (- m 1) (ack m (- n 1))))))
(println (ack 3 5))
(defn gcd [a b] (if (= b 0) a (gcd b (rem a b))))
(println (gcd 20 15))
(defn fact [n] (if (= n 0) 1 (* n (fact (- n 1)))))
(println (fact 8))